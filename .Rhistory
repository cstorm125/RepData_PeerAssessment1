mtcars
rnorm
library(maps)
map("world", regions="Germany")
set.seed(10)
dfPoints <- data.frame(
long = 10 + runif(10, -2, 2),
lat = 50 + runif(10, -2, 2)
)
points(x = dfPoints$long, y = dfPoints$lat, col = "red")
lines(x = dfPoints$long, y = dfPoints$lat, col = "blue")
library(maps)
map("world)
set.seed(10)
dfPoints <- data.frame(
long = 10 + runif(10, -2, 2),
lat = 50 + runif(10, -2, 2)
)
points(x = dfPoints$long, y = dfPoints$lat, col = "red")
lines(x = dfPoints$long, y = dfPoints$lat, col = "blue")
library(maps)
map("world")
set.seed(10)
dfPoints <- data.frame(
long = 10 + runif(10, -2, 2),
lat = 50 + runif(10, -2, 2)
)
points(x = dfPoints$long, y = dfPoints$lat, col = "red")
lines(x = dfPoints$long, y = dfPoints$lat, col = "blue")
library(maps)
map("world", regions="Germany")
set.seed(10)
dfPoints <- data.frame(
long = 10
lat = 50
)
points(x = dfPoints$long, y = dfPoints$lat, col = "red")
lines(x = dfPoints$long, y = dfPoints$lat, col = "blue")
library(maps)
map("world", regions="Germany")
set.seed(10)
dfPoints <- data.frame(
long = 10,
lat = 50
)
points(x = dfPoints$long, y = dfPoints$lat, col = "red")
lines(x = dfPoints$long, y = dfPoints$lat, col = "blue")
library(maps)
map("world")
set.seed(10)
dfPoints <- data.frame(
long = 10 + runif(10, -2, 2),
lat = 50 + runif(10, -2, 2)
)
points(x = dfPoints$long, y = dfPoints$lat, col = "red")
lines(x = dfPoints$long, y = dfPoints$lat, col = "blue")
library(ggmap)
install_packages(ggmap)
install_package(ggmap)
library(ggmap)
library(ggmap)
library(ggmap)
ggmap
help(ggmap)
set.seed(500)df <- round(data.frame(    x = jitter(rep(-95.36, 50), amount = .3),    y = jitter(rep( 29.76, 50), amount = .3)), digits = 2)map <- get_googlemap(’houston’, markers = df, path = df, scale = 2)ggmap(map, extent = ’device’)
df <- round(data.frame(    x = jitter(rep(-95.36, 50), amount = .3),    y = jitter(rep( 29.76, 50), amount = .3)), digits = 2)map <- get_googlemap(’houston’, markers = df, path = df, scale = 2)ggmap(map, extent = ’device’)
set.seed(500)df <- round(data.frame(    x = jitter(rep(-95.36, 50), amount = .3),    y = jitter(rep( 29.76, 50), amount = .3)), digits = 2)map <- get_googlemap(’houston’, markers = df, path = df, scale = 2)ggmap(map, extent = ’device’)
hello
set.seed(500)df <- round(data.frame(    x = jitter(rep(-95.36, 50), amount = .3),    y = jitter(rep( 29.76, 50), amount = .3)), digits = 2)map <- get_googlemap(’houston’, markers = df, path = df, scale = 2)ggmap(map, extent = ’device’)
View(dfPoints)
View(dfPoints)
View(dfPoints)
View(dfPoints)
View(dfPoints)
set.seed(500)
df <- round(data.frame(
x = jitter(rep(-95.36, 50), amount = .3),
y = jitter(rep( 29.76, 50), amount = .3)
), digits = 2)
map <- get_googlemap(’houston’, markers = df, path = df, scale = 2)
ggmap(map, extent = ’device’)
View(dfPoints)
View(df)
map <- get_googlemap(’houston’, markers = df, path = df, scale = 2)
map <- get_googlemap('houston',markers=df,path=df,scale=1)
ggpmap(map, extent='device')
ggmap(map, extent='device')
help("get_googlemap")
map <- get_googlemap('houston',markers=df,scale=1)
ggmap(map)
View(df)
library(rjson)
load("~/projects/droneflyer/servicecenter.json")
data <- fromJSON(file = 'servicecenter.json')
load("~/projects/droneflyer/servicecenter.json")
load("~/projects/droneflyer/servicecenter.json")
data <- fromJSON(file = 'servicecenter.json')
data <- fromJSON(file = "~/projects/droneflyer/servicecenter.json"))
data <- fromJSON(file = "~/projects/droneflyer/servicecenter.json")
data
help(fromJSON)
data <- fromJSON(file = "~/projects/droneflyer/servicecenter.json",collapse='')
json_file = "~/projects/droneflyer/servicecenter.json"
json_data <- fromJSON(paste(readLines(json_file), collapse=""))
json_data
json_data <- fromJSON(paste(readLines(json_file)))
library(jsonlite)
json_data <- fromJSON(paste(readLines(json_file)))
json_data <- fromJSON(file=json_file)
json_data <- fromJSON(txt==json_file)
json_data <- fromJSON(txt=json_file)
dTable(airquality, sPaginationType = "full_numbers")
library(rCharts)
dTable(airquality, sPaginationType = "full_numbers")
??hist
??lwd
data(pollutions)
data(pollution)
data(mtcars)
barplot(table(mtcars$wt),main=“title")
barplot(table(mtcars),main=“title")
barplot(table(mtcars$wt))
??par
??mar
??par
help(par)
marlibrary(lattice)
state <- data.frame(state.x77,region=state.region)
xyplot(Life.Ex~ Income | region, data = state, layout  = c(4,1))
library(lattice)
state <- data.frame(state.x77,region=state.region)
xyplot(Life.Ex~ Income | region, data = state, layout  = c(4,1))
data(state)
library(lattice)
state <- data.frame(state.x77,region=state.region)
xyplot(Life.Ex~ Income | region, data = state, layout  = c(4,1))
library(lattice)
state <- data.frame(state.x77,region=state.region)
xyplot(Life.Exp~ Income | region, data = state, layout  = c(4,1))
pchShow()
example(points)
bitmap()
quartz()
h<-hist(daily_steps$steps, breaks=10,col='lightblue',
xlab='Total Steps Per Day', main='Histogram by Number of Steps Taken Each Day (NA ignored)')
print(h)
dev.copy(png, file='plot_hist.png')
dev.off()
h<-hist(daily_steps$steps, breaks=10,col='lightblue',
xlab='Total Steps Per Day', main='Histogram by Number of Steps Taken Each Day (NA ignored)')
print(h)
renderPlot({
#Get y-axis
mean_interval <- aggregate(activity$steps, by=list(activity$interval),FUN=mean, na.rm=TRUE)
names(mean_interval) <-c('interval','mean')
#Plot
renderPlot({
plot(mean_interval$interval, mean_interval$mean, type='l', xlab='5-min Interval',
ylab='Mean Steps', main='Time Series of Mean Steps Per 5-min Interval')})
#Save file
dev.copy(png, file='time_series.png')
dev.off()
#Plot
#Get y-axis
mean_interval <- aggregate(activity$steps, by=list(activity$interval),FUN=mean, na.rm=TRUE)
names(mean_interval) <-c('interval','mean')
#Plot
plot(mean_interval$interval, mean_interval$mean, type='l', xlab='5-min Interval',
ylab='Mean Steps', main='Time Series of Mean Steps Per 5-min Interval')
#Save file
dev.copy(png, file='time_series.png')
dev.off()
plot(mean_interval$interval, mean_interval$mean, type='l', xlab='5-min Interval',
ylab='Mean Steps', main='Time Series of Mean Steps Per 5-min Interval')
mean_interval <- aggregate(activity$steps, by=list(activity$interval),FUN=mean, na.rm=TRUE)
names(mean_interval) <-c('interval','mean')
#Plot
plot(mean_interval$interval, mean_interval$mean, type='l', xlab='5-min Interval',
ylab='Mean Steps', main='Time Series of Mean Steps Per 5-min Interval')
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/projects/RepData_PeerAssessment1")
source('~/.active-rstudio-document', echo=TRUE)
